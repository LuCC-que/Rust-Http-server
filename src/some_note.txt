// let string = String::from("127.0.0.1:8080");
    // let string_slice = &string[10..]; //<-if it is a reference already, you can choose to not mention it when passing the value
    // let string_borrow: &str = &string;
    // let mut string_literal = "1234"; //<-compile knows it in the compiling time, save it to maybe text region, and return a slicing in stack

    // dbg!(&string);
    // dbg!(&string_slice);
    // dbg!(string_borrow);
    // dbg!(string_literal);

    // let get = Method::GET;
    // let delete = Method::DELETE;
    // let post = Method::POST;
    // let put = Method::PUT;




    // match str::from_utf8(buf) {
        //     Ok(request) => {}
        //     Err(_) => return Err(ParseError::InvalidEncoding),
        // }

        // match str::from_utf8(buf).or(Err(ParseError::InvalidEncoding)) {
        //     Ok(request) => {}
        //     Err(e) => return Err(e),
        // }

        let request = str::from_utf8(buf)?;

        they are equivlent